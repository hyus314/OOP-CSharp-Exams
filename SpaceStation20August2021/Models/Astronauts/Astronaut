using SpaceStation.Models.Astronauts.Contracts;
using SpaceStation.Models.Bags;
using SpaceStation.Models.Bags.Contracts;
using SpaceStation.Utilities.Messages;
using System;
using System.Collections.Generic;
using System.Text;

namespace SpaceStation.Models.Astronauts
{
    public abstract class Astronaut : IAstronaut
    {
        private string name;
        private double oxygen;
        private IBag bag;

        public Astronaut(string name, double oxygen)
        {
            Name = name;
            Oxygen = oxygen;
            bag = new Backpack();
        }
        public string Name
        {
            get { return name; }
            private set 
            {
                if (string.IsNullOrWhiteSpace(value))
                {
                    throw new ArgumentNullException(ExceptionMessages.InvalidAstronautName);
                }   

                name = value;
            }
        }


        public double Oxygen
        {
            get { return oxygen; }
            protected set 
            {
                if (value < 0)
                {
                    throw new ArgumentException(ExceptionMessages.InvalidOxygen);
                }

                oxygen = value;
            }
        }


        public bool CanBreath
                => Oxygen > 0;
        public IBag Bag => bag;

        public virtual void Breath()
        {
         
        }
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();

            string bagItems = Bag.Items.Count > 0 ?
                string.Join(", ", Bag.Items) : "none";

            sb.AppendLine($"Name: {Name}")
                .AppendLine($"Oxygen: {Oxygen}")
                .AppendLine($"Bag items: {bagItems}");

            return sb.ToString().Trim();
        }
    }
}
